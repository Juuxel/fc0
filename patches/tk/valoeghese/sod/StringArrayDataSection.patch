--- a/tk/valoeghese/sod/StringArrayDataSection.java
+++ b/tk/valoeghese/sod/StringArrayDataSection.java
@@ -1,5 +1,2 @@
-/*
- * Decompiled with CFR 0.150.
- */
 package tk.valoeghese.sod;
 
@@ -7,29 +4,39 @@
 import java.util.Iterator;
 import java.util.List;
-import tk.valoeghese.sod.BaseDataSection;
 
-public final class StringArrayDataSection
-implements BaseDataSection<String> {
-    private final List<String> array = new ArrayList<String>();
+public class StringArrayDataSection implements BaseDataSection<String> {
+    public StringArrayDataSection() {
+        this.array = new ArrayList<String>();
+    }
 
-    public final int size() {
-        return this.array.size();
+    private final List<String> array;
+
+    public void writeString(String value) {
+        this.array.add(value);
     }
 
+    public int size() {
+        return array.size();
+    }
+
+    /**
+     * @deprecated Should only be used by the parser! Please use the type specific methods instead for writing data.
+     */
     @Override
-    public final <T> void writeForParser(T object) {
-        if (object instanceof String) {
-            String string = (String)object;
-            object = this;
-            ((StringArrayDataSection)object).array.add(string);
-            return;
+    public <T> void writeForParser(T data) throws UnsupportedOperationException {
+        if (data instanceof String) {
+            this.writeString((String) data);
+        } else {
+            throw new UnsupportedOperationException("Invalid data type parameter for this data section");
         }
-        throw new UnsupportedOperationException("Invalid data type parameter for this data section");
     }
 
+    public String readString(int index) {
+        return this.array.get(index);
+    }
+
     @Override
-    public final Iterator<String> iterator() {
+    public Iterator<String> iterator() {
         return this.array.iterator();
     }
 }
-

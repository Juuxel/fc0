--- a/tk/valoeghese/fc0/client/render/Shader.java
+++ b/tk/valoeghese/fc0/client/render/Shader.java
@@ -15,8 +15,8 @@
     private final int program;
 
-    public Shader(String object, String string) {
+    public Shader(String location, String string) {
         int n = GL20.glCreateShader(35633);
         try {
-            GL20.glShaderSource(n, (CharSequence)ResourceLoader.read((String)object));
+            GL20.glShaderSource(n, (CharSequence)ResourceLoader.read((String)location));
         }
         catch (IOException iOException) {
@@ -24,7 +24,7 @@
         }
         GL20.glCompileShader(n);
-        object = new int[1];
+        int[] object = new int[1];
         GL20.glGetShaderiv(n, 35713, (int[])object);
-        if (object[0] == false) {
+        if (object[0] == 0) {
             throw new RuntimeException("Error compiling vertex shader", new RuntimeException(GL20.glGetShaderInfoLog(n)));
         }
@@ -38,5 +38,5 @@
         GL20.glCompileShader(n2);
         GL20.glGetShaderiv(n2, 35713, (int[])object);
-        if (object[0] == false) {
+        if (object[0] == 0) {
             throw new RuntimeException("Error compiling fragment shader", new RuntimeException(GL20.glGetShaderInfoLog(n2)));
         }
@@ -46,5 +46,5 @@
         GL20.glLinkProgram(this.program);
         GL20.glGetProgramiv(this.program, 35714, (int[])object);
-        if (object[0] == false) {
+        if (object[0] == 0) {
             throw new RuntimeException("Error linking shaders", new RuntimeException(GL20.glGetProgramInfoLog(this.program)));
         }

--- a/tk/valoeghese/fc0/io/ThreadedSodChunkStorage.java
+++ b/tk/valoeghese/fc0/io/ThreadedSodChunkStorage.java
@@ -34,10 +34,10 @@
     private static final Object LOCK;
 
-    public ThreadedSodChunkStorage(String object, long l) {
-        this.saveDirectory = new File("./saves/" + (String)object);
+    public ThreadedSodChunkStorage(String path, long l) {
+        this.saveDirectory = new File("./saves/" + (String)path);
         this.saveDirectory.mkdirs();
         this.saveFile = new File(this.saveDirectory, "save.gsod");
         if (this.saveFile.exists()) {
-            object = BinaryData.readGzipped(this.saveFile);
+            Object object = BinaryData.readGzipped(this.saveFile);
             DataSection dataSection = ((BinaryData)object).get("data");
             this.field_200 = dataSection.readLong(0);
@@ -78,5 +78,5 @@
                 Object object2 = arrchunk[i];
                 if (object2 == null) continue;
-                Chunk chunk = object2;
+                Chunk chunk = (Chunk) object2;
                 object2 = this;
                 object2 = new File(((ThreadedSodChunkStorage)object2).saveDirectory, "c" + chunk.x + "." + chunk.z + ".gsod");
@@ -89,5 +89,4 @@
                 }
                 catch (IOException iOException) {
-                    arrchunk = chunk;
                     throw new UncheckedIOException("Error writing chunk! " + new ChunkPos(((Chunk)object).x, ((Chunk)object).z).toString(), iOException);
                 }
@@ -95,9 +94,9 @@
             try {
                 this.saveFile.createNewFile();
-                arrchunk = new BinaryData();
+                BinaryData data = new BinaryData();
                 DataSection dataSection = new DataSection();
                 dataSection.writeLong(this.field_200);
                 dataSection.writeLong(l);
-                ((BinaryData)arrchunk).put("data", dataSection);
+                data.put("data", dataSection);
                 DataSection dataSection2 = new DataSection();
                 dataSection2.writeDouble(pos.getX());
@@ -107,12 +106,11 @@
                 dataSection2.writeDouble(pos2.getY());
                 dataSection2.writeDouble(pos2.getZ());
-                ((BinaryData)arrchunk).put("player", dataSection2);
-                ((BinaryData)arrchunk).writeGzipped(this.saveFile);
+                data.put("player", dataSection2);
+                data.writeGzipped(this.saveFile);
             }
             catch (IOException iOException) {
                 throw new UncheckedIOException("Error writing save data", iOException);
             }
-            arrchunk = LOCK;
-            synchronized (arrchunk) {
+            synchronized (LOCK) {
                 SaveThread.finish();
                 LOCK.notifyAll();
